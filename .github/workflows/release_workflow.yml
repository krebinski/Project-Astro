name: Release Workflow

on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Generate Release Notes with AI
        id: generate_ai_notes
        run: |
          curl https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d '{
              "model": "gpt-4",
              "messages": [
                {"role": "system", "content": "Você é um assistente que cria release notes altamente profissionais com base em commits recentes."},
                {"role": "user", "content": "Aqui estão os commits: ${{ github.event.head_commit.message }}. Crie um release note profissional baseado neles."}
              ],
              "max_tokens": 500
            }' > ai_release_notes.json

      - name: Debug AI response
        run: |
          cat ai_release_notes.json  # Verifica o conteúdo do arquivo JSON gerado

      - name: Extract Release Notes
        id: extract_notes
        run: |
          RELEASE_NOTES=$(cat ai_release_notes.json | jq -r '.choices[0].message.content')
          echo "notes=$RELEASE_NOTES" >> $GITHUB_ENV

      - name: Check extracted notes
        run: echo "Release Notes: ${{ env.notes }}"  # Verifica se a variável 'notes' está correta

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ env.notes }}
          draft: false
          prerelease: false
